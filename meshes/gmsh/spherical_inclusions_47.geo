SetFactory("OpenCASCADE");
//Starting with a box of length = 1
Box(1) = {0, 0, 0, 1, 1, 1};
x = 0; y = 0; z = 0; 
//-----------------------------------------------------------------------------------------------------------------------
//Copy in the section below the geometric information generated from the pre-processing module in meshes/txt_mesh/
//The geometric information starts from the first line until
//this line -> v() = BooleanFragments { Volume{1}; Delete; }{ Volume{2:n}; Delete; };
//-----------------------------------------------------------------------------------------------------------------------
Sphere(2) = {x+0.5210514646965024, y+0.4435708208949556, z+0.5100615078432602, 0.12985790850635798}; 
Sphere(3) = {x+0.8479186355560543, y+0.2577786301825648, z+0.17261704087179824, 0.12957486772926388}; 
Sphere(4) = {x+0.6627859791313935, y+0.46688739776293436, z+0.2735536779211425, 0.12936723314564752}; 
Sphere(5) = {x+0.1809333407088713, y+0.5421103170978777, z+0.6904175141660646, 0.12923954898742498}; 
Sphere(6) = {x+0.6816753088769505, y+0.25176178556728374, z+0.5905172406251105, 0.12741284525191815}; 
Sphere(7) = {x+0.2042662644411416, y+0.6713627626932973, z+0.3555336920673633, 0.12588985050079368}; 
Sphere(8) = {x+0.2842398479527091, y+0.7754197909138765, z+0.8655376279319174, 0.1244743475750994}; 
Sphere(9) = {x+0.6210737218678913, y+0.5995510966477128, z+0.7663164708320891, 0.12424299010301211}; 
Sphere(10) = {x+0.38903650319005817, y+0.8551097366049129, z+0.15065347783674427, 0.1238457446755327}; 
Sphere(11) = {x+0.21203457889926575, y+0.13664704685110415, z+0.4495206310146659, 0.12368891021977778}; 
Sphere(12) = {x+0.5166654965964685, y+0.6982419051720765, z+0.4232843462801271, 0.1233322688463376}; 
Sphere(13) = {x+0.867346341395669, y+0.384452357676424, z+0.7961672030519471, 0.12254425293007877}; 
Sphere(14) = {x+0.45571459157751076, y+0.30081574732371136, z+0.7450979940859864, 0.12170691966537799}; 
Sphere(15) = {x+0.8209372049254604, y+0.6934228815351303, z+0.25329937743925035, 0.12157686246418739}; 
Sphere(16) = {x+0.35074582022747997, y+0.5760680490920934, z+0.12940296254873243, 0.1215500369626283}; 
Sphere(17) = {x+0.545092158432436, y+0.1387693420073891, z+0.39235965660750105, 0.12074761962406141}; 
Sphere(18) = {x+0.8159860051607093, y+0.819154063381676, z+0.674278405667972, 0.11977531594257654}; 
Sphere(19) = {x+0.17265300465258113, y+0.24133234124657144, z+0.14091141970708723, 0.1195913890987013}; 
Sphere(20) = {x+0.7924453606974018, y+0.6020618672178744, z+0.5523493785199673, 0.11846432832317702}; 
Sphere(21) = {x+0.5145334684148841, y+0.2661985640073072, z+0.18671465155008127, 0.11841731130473576}; 
Sphere(22) = {x+0.19781959007213007, y+0.8401125499162736, z+0.5762741792238658, 0.11796326671786476}; 
Sphere(23) = {x+0.21273177562799644, y+0.20962395963934707, z+0.8022922757992813, 0.11703385991372903}; 
Sphere(24) = {x+0.8737337423877533, y+0.12460850872035466, z+0.8111060710316059, 0.11652147409790826}; 
Sphere(25) = {x+0.5066761960883406, y+0.8282368358271506, z+0.7218971936699728, 0.11600388452846724}; 
Sphere(26) = {x+0.3813371958104118, y+0.5264773910271955, z+0.842092870055455, 0.11587612515179926}; 
Sphere(27) = {x+0.2038353120007701, y+0.40918027271417234, z+0.38074998484468836, 0.11505112575644588}; 
Sphere(28) = {x+0.8641479691290712, y+0.4032163754824833, z+0.40435712693260223, 0.11473043124042791}; 
Sphere(29) = {x+0.7064164544640584, y+0.8582487024186106, z+0.12488106339845391, 0.11354403321872744}; 
Sphere(30) = {x+0.11444482975249781, y+0.5781329104377929, z+0.12258934715412613, 0.11307428061581118}; 
Sphere(31) = {x+0.742081962926414, y+0.8739338637386668, z+0.4285268938860341, 0.11172952748253355}; 
Sphere(32) = {x+0.8687170965132368, y+0.6802725266194422, z+0.8831808052725215, 0.11081314958166724}; 
Sphere(33) = {x+0.629363205285006, y+0.1795532971045495, z+0.8774225491222158, 0.10996423031504077}; 
Sphere(34) = {x+0.8569863159589783, y+0.13546848290457258, z+0.4522272250716877, 0.1093766733148655}; 
Sphere(35) = {x+0.11434594407689178, y+0.31392776998793437, z+0.622177004840257, 0.10914518899617878}; 
Sphere(36) = {x+0.8720489928524741, y+0.500046264396098, z+0.1154391739244974, 0.10872919796613498}; 
Sphere(37) = {x+0.1526412964135659, y+0.8788294979077378, z+0.11880071093774637, 0.10852503408794173}; 
Sphere(38) = {x+0.34208039962674874, y+0.8853876592289582, z+0.3981763514925437, 0.10843208262978962}; 
Sphere(39) = {x+0.555557020751683, y+0.6807423548423441, z+0.1438475005371443, 0.10762126701582256}; 
Sphere(40) = {x+0.6505735672147718, y+0.8124648504920889, z+0.8885599649732998, 0.10425072086459727}; 
Sphere(41) = {x+0.34051595325664186, y+0.11359470971664207, z+0.26242219675097955, 0.10390130206939546}; 
Sphere(42) = {x+0.37009025751760755, y+0.657923620753856, z+0.6084692609962873, 0.10335159753673602}; 
Sphere(43) = {x+0.37572920757785877, y+0.10790647700482942, z+0.604131730261445, 0.10326101986515811}; 
Sphere(44) = {x+0.12257035563099922, y+0.39926604419831485, z+0.8865523560961919, 0.10184692418392977}; 
Sphere(45) = {x+0.33209662877426316, y+0.3044144634064416, z+0.5571035881058304, 0.10115292069045534}; 
Sphere(46) = {x+0.6464384727739154, y+0.39511542252293164, z+0.8812473930770619, 0.1003959654579819}; 
Sphere(47) = {x+0.4092648428983343, y+0.12049744545557864, z+0.8902053363234003, 0.09955347634759912}; 
Sphere(48) = {x+0.6652427032284858, y+0.1261355994488738, z+0.10276077821785806, 0.09936411880211662}; 
Sphere(49) = {x+0.8985202615062733, y+0.8995226086355484, z+0.27822310780854487, 0.0986642910332968}; 
Sphere(50) = {x+0.553112467739898, y+0.8971033351982701, z+0.3084907585202308, 0.09827079159145466}; 
Sphere(51) = {x+0.11731152454733676, y+0.8934310168112107, z+0.3571994815161471, 0.09790247654135428}; 
Sphere(52) = {x+0.8794552605102932, y+0.8966319055713764, z+0.8820674757513681, 0.09674222909116112}; 
Sphere(53) = {x+0.1161386018295677, y+0.897285261735416, z+0.7775066369543006, 0.09503214800218542}; 
Sphere(54) = {x+0.09997886813875076, y+0.09798333614698636, z+0.6368583087825792, 0.0947675512225098}; 
Sphere(55) = {x+0.903712958935619, y+0.24608742934488081, z+0.6180307262691436, 0.09402367853372046}; 
Sphere(56) = {x+0.3919522730264161, y+0.5057611285501094, z+0.32930838306091625, 0.09381066076814451}; 
Sphere(57) = {x+0.5357079938774383, y+0.9000497737909887, z+0.5255988101921334, 0.09341463363026174}; 
Sphere(58) = {x+0.13873887575610133, y+0.6102803903814064, z+0.9001389564862369, 0.09332156665724733}; 
Sphere(59) = {x+0.37664238796875926, y+0.2843693684058839, z+0.3644179670657256, 0.09273514345370759}; 
Sphere(60) = {x+0.9050311851950823, y+0.7499808626893139, z+0.4474430235560533, 0.09265985954885346}; 
Sphere(61) = {x+0.5475848525321539, y+0.10392324630944927, z+0.7061083301758992, 0.09252167518424893}; 
Sphere(62) = {x+0.4512064493086855, y+0.9064292733532671, z+0.9086183937740491, 0.09127085989846756}; 
Sphere(63) = {x+0.7456492959767879, y+0.09415729951930024, z+0.28301741283200854, 0.09111296767181719}; 
Sphere(64) = {x+0.09115661629071645, y+0.08943323647946469, z+0.27783223942090085, 0.08936979868471112}; 
Sphere(65) = {x+0.5391481057529597, y+0.47293402859672873, z+0.09048388401509218, 0.0890630613019813}; 
Sphere(66) = {x+0.33944482483321914, y+0.3639254379518905, z+0.10964469697160861, 0.08825633920017387}; 
Sphere(67) = {x+0.48751284346428336, y+0.6976688437936838, z+0.9034165863106016, 0.08764309332032741}; 
Sphere(68) = {x+0.7217986437467037, y+0.25746810319730157, z+0.3535995518350411, 0.0875825179575953}; 
Sphere(69) = {x+0.9098217443863871, y+0.8904872195007691, z+0.0890236526585903, 0.0874340970884063}; 
Sphere(70) = {x+0.459554830112167, y+0.08611501830934615, z+0.09797696426460102, 0.08567272470064755}; 
Sphere(71) = {x+0.08693849733356918, y+0.5429310572546715, z+0.4757219528484784, 0.08553369831908983}; 
Sphere(72) = {x+0.33017595939184685, y+0.3335969873709118, z+0.9119172767735366, 0.08527679893105623}; 
Sphere(73) = {x+0.6468449077440088, y+0.7401931841126372, z+0.5852573399647536, 0.08489034376453597}; 
Sphere(74) = {x+0.9083546985530564, y+0.5803102951242508, z+0.7184805201537101, 0.08437231289926536}; 
Sphere(75) = {x+0.31171849848987265, y+0.4976481461569139, z+0.526241665146627, 0.08433535942211132}; 
Sphere(76) = {x+0.08381221068692368, y+0.08870806744188561, z+0.9114669237154416, 0.08351678315020136}; 
Sphere(77) = {x+0.9137992128281721, y+0.43946980154407844, z+0.6001182862366893, 0.08342590048882643}; 
Sphere(78) = {x+0.9147136778239989, y+0.9136402980838089, z+0.5206548945426928, 0.08317258021638303}; 
Sphere(79) = {x+0.6664695594432104, y+0.3567400829483807, z+0.08807951244835603, 0.08163542530776591}; 
Sphere(80) = {x+0.3277418397255688, y+0.9124029467445263, z+0.7111223636951504, 0.08139161872580698}; 
Sphere(81) = {x+0.08841637846598976, y+0.25498277109010004, z+0.32386000531205567, 0.08036996127683596}; 
Sphere(82) = {x+0.0822530809580224, y+0.7788398064932334, z+0.9088479033174592, 0.08023769389586952}; 
Sphere(83) = {x+0.08896555281763756, y+0.41164016613160825, z+0.2202760905395703, 0.08023535045118756}; 
Sphere(84) = {x+0.09092097331489574, y+0.7260505262245905, z+0.7418475437440591, 0.0800117874226564}; 
Sphere(85) = {x+0.7262401295439249, y+0.4454295629261537, z+0.6580716971153573, 0.0793231571212209}; 
Sphere(86) = {x+0.9171571905548122, y+0.08291651511018691, z+0.26489580468267737, 0.07919812972648552}; 
Sphere(87) = {x+0.27750545964620643, y+0.08079584919702337, z+0.09309136845654907, 0.07757669772336606}; 
Sphere(88) = {x+0.6922587358647433, y+0.53887942521605, z+0.0775946783409798, 0.0767663588301983}; 
Sphere(89) = {x+0.9170347259349095, y+0.07811480123547015, z+0.09832082383028956, 0.07637954125547179}; 
Sphere(90) = {x+0.7942469894382762, y+0.08412719568569585, z+0.6220770780803975, 0.0760892222631449}; 
Sphere(91) = {x+0.7555423738090539, y+0.5318119046219066, z+0.9193512340934877, 0.07605772378616724}; 
Sphere(92) = {x+0.9153886184512428, y+0.5897862119362967, z+0.3913845088873221, 0.07474576422629528}; 
Sphere(93) = {x+0.08159440884997658, y+0.7017587035113637, z+0.5096743477219667, 0.07284190083983931}; 
Sphere(94) = {x+0.07335058303508653, y+0.737180085594378, z+0.22066951873910837, 0.0726493694094339}; 
Sphere(95) = {x+0.9252236343604121, y+0.66893147467364, z+0.07765176036463071, 0.07213282472858351}; 
Sphere(96) = {x+0.07257938948866043, y+0.08119942094724264, z+0.07594892707897306, 0.07190462673521171}; 
Sphere(97) = {x+0.6721037828390117, y+0.9249752738803053, z+0.749241465621542, 0.07161472064249111}; 
Sphere(98) = {x+0.2761991509390541, y+0.3646897667278036, z+0.7092749900154518, 0.07059943760046271}; 
Sphere(99) = {x+0.7860523625097988, y+0.2611269510812978, z+0.9222290213810223, 0.07043854118142628}; 
Sphere(100) = {x+0.24040938602697, y+0.729641966376327, z+0.07341203681884378, 0.07032104671767167}; 
Sphere(101) = {x+0.3557763557693614, y+0.2057757944832068, z+0.10127354993285276, 0.06988655681985892}; 
Sphere(102) = {x+0.7342083281684729, y+0.6792020003462816, z+0.06963000502119293, 0.06847961461495848}; 
Sphere(103) = {x+0.6428222189764934, y+0.7533783852376948, z+0.2890719807738653, 0.06846398896793823}; 
Sphere(104) = {x+0.3835874857839018, y+0.8527553278219895, z+0.5707611880654712, 0.06817563100983115}; 
Sphere(105) = {x+0.4870003697974652, y+0.23572180610015556, z+0.5666115830169745, 0.06676034159510932}; 
Sphere(106) = {x+0.9284114319473108, y+0.5132792161773554, z+0.9216452652621518, 0.06541875186284372}; 
Sphere(107) = {x+0.37861849500850553, y+0.46085105450426805, z+0.6574044538599981, 0.06541432227408049}; 
Sphere(108) = {x+0.7048436937533643, y+0.6410942719156281, z+0.39504234402285665, 0.06506421939573692}; 
Sphere(109) = {x+0.0721947802688049, y+0.5451095246046801, z+0.29305568641111635, 0.0643098746982613}; 
Sphere(110) = {x+0.7068341381113216, y+0.07105803256975074, z+0.7639609103626699, 0.06374519378461352}; 
Sphere(111) = {x+0.1494983692394793, y+0.9246085403901741, z+0.935258713065891, 0.06363761494714525}; 
Sphere(112) = {x+0.1729632545113734, y+0.4148813625915819, z+0.07018810417951357, 0.06335557667624227}; 
Sphere(113) = {x+0.4775890472567911, y+0.3215281889805946, z+0.9312341354486967, 0.0632900700937206}; 
Sphere(114) = {x+0.6781023980428952, y+0.06831417236664869, z+0.5185982577547121, 0.06231478078320018}; 
Sphere(115) = {x+0.2335318933156571, y+0.4202317137638678, z+0.2030724928221463, 0.06210891389699403}; 
Sphere(116) = {x+0.38434247159710305, y+0.7022744532556381, z+0.274268164428879, 0.06193312417687478}; 
Sphere(117) = {x+0.3289822043032897, y+0.0713923790002706, z+0.7585041888718099, 0.06167827712900382}; 
Sphere(118) = {x+0.6912934349594921, y+0.9368525910116859, z+0.59165993726058, 0.06027773853295014}; 
v() = BooleanFragments { Volume{1}; Delete; }{ Volume{2 :118}; Delete; }; 
//-----------------------------------------------------------------------------------------------------------------------
// STL mesh for bounding boxes:
Geometry.OCCBoundsUseStl = 1;
eps = 1e-3;
//volumes in the bounding box of the original box
vin() = Volume In BoundingBox {-eps,-eps,-eps, 1+eps,1+eps,1+eps};
v() -= vin();
//Deleting the volumes outside the volume of the origina box
Recursive Delete{ Volume{v()}; }
//--------------------------------------------------------------------------------------
//For applying periodic boundaries
//We get all surfaces on the left:
Sxmin() = Surface In BoundingBox{-eps, -eps, -eps, +eps, 1+eps, 1+eps};
For i In {0:#Sxmin()-1}
  // We get the bounding box of the left surfaces
  bb() = BoundingBox Surface { Sxmin(i) };
  // We translate the bounding box to the right and look for surfaces inside i
  Sxmax() = Surface In BoundingBox { bb(0)-eps+1, bb(1)-eps, bb(2)-eps,
                                     bb(3)+eps+1, bb(4)+eps, bb(5)+eps };
  // For all the matches, we compare the corresponding bounding boxes
  For j In {0:#Sxmax()-1}
    bb2() = BoundingBox Surface { Sxmax(j) };
    bb2(0) -= 1;
    bb2(3) -= 1;
    // if they match, we apply the periodicity constraint
    If(Fabs(bb2(0)-bb(0)) < eps && Fabs(bb2(1)-bb(1)) < eps &&
       Fabs(bb2(2)-bb(2)) < eps && Fabs(bb2(3)-bb(3)) < eps &&
       Fabs(bb2(4)-bb(4)) < eps && Fabs(bb2(5)-bb(5)) < eps)
      Periodic Surface {Sxmax(j)} = {Sxmin(i)} Translate {1,0,0};
    EndIf
  EndFor
EndFor

//We get all surfaces on the outside:
Symin() = Surface In BoundingBox{-eps, -eps, -eps, 1+eps, eps, 1+eps};
For i In {0:#Symin()-1}
  // We get the bounding box of each outter surface
  bb() = BoundingBox Surface { Symin(i) };
  // We translate the bounding box to the inside and look for surfaces inside i
  Symax() = Surface In BoundingBox { bb(0)-eps, bb(1)-eps+1, bb(2)-eps,
                                     bb(3)+eps, bb(4)+eps+1, bb(5)+eps };
  // For all the matches, we compare the corresponding bounding boxes
  For j In {0:#Symax()-1}
    bb2() = BoundingBox Surface { Symax(j) };
    bb2(1) -= 1;
    bb2(4) -= 1;
    // if they match, we apply the periodicity constraint
    If(Fabs(bb2(0)-bb(0)) < eps && Fabs(bb2(1)-bb(1)) < eps &&
       Fabs(bb2(2)-bb(2)) < eps && Fabs(bb2(3)-bb(3)) < eps &&
       Fabs(bb2(4)-bb(4)) < eps && Fabs(bb2(5)-bb(5)) < eps)
      Periodic Surface {Symax(j)} = {Symin(i)} Translate {0,1,0};
    EndIf
  EndFor
EndFor

// We get all surfaces on the bottom:
Szmin() = Surface In BoundingBox{-eps, -eps, -eps, 1+eps, 1+eps, +eps};

For i In {0:#Szmin()-1}
  // We get the bounding box of each bottom surface
  bb() = BoundingBox Surface { Szmin(i) };
  // We translate the bounding box to the top and look for surfaces inside i
  Szmax() = Surface In BoundingBox { bb(0)-eps, bb(1)-eps, bb(2)-eps+1,
                                     bb(3)+eps, bb(4)+eps, bb(5)+eps+1 };
  // For all the matches, we compare the corresponding bounding boxes
  For j In {0:#Szmax()-1}
    bb2() = BoundingBox Surface { Szmax(j) };
    bb2(2) -= 1;
    bb2(5) -= 1;
    // ...and if they match, we apply the periodicity constraint
    If(Fabs(bb2(0)-bb(0)) < eps && Fabs(bb2(1)-bb(1)) < eps &&
       Fabs(bb2(2)-bb(2)) < eps && Fabs(bb2(3)-bb(3)) < eps &&
       Fabs(bb2(4)-bb(4)) < eps && Fabs(bb2(5)-bb(5)) < eps)
      Periodic Surface {Szmax(j)} = {Szmin(i)} Translate {0,0,1};
    EndIf
  EndFor
EndFor
//---------------------------------------------------------------------------------------------------------------------------------------
//In this section we copy the rest of the information gathered from the file generated from the pre-processing module in meshes/txt_mesh/
//---------------------------------------------------------------------------------------------------------------------------------------
Physical Volume(1) = {119}; 
Physical Volume(2) = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118}; 
Mesh.CharacteristicLengthMin = 0.02; 
Mesh.CharacteristicLengthMax = 0.02; 
//------------------------------------------------------------------------------------------------------------------------------------------
